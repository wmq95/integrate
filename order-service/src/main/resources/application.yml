server:
  port: 8004
spring:
  application:
    name: order

  datasource:
    hikari:
#      jdbc-url: jdbc:mysql://my:7777/order?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
      jdbc-url: jdbc:mysql://mysql:3306/order_service?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: 123456
  main:
    allow-bean-definition-overriding: true
  redis:
    lettuce:
      pool:
        max-idle: 8
        max-wait: 3000
        max-active: 8
    host: redis
    port: 6379
seata:
  tx-service-group: my_test_tx_group
  registry:
    type: nacos #nacos
    nacos:
      application: seata-server
      server-addr: nacos:8848
  config:
    type: nacos
    nacos:
      server-addr: nacos:8848
      group: SEATA_GROUP
  service:
    vgroup-mapping:
      my_test_tx_group: default
    disable-global-transaction: false
  client:
    rm:
      report-success-enable: true
    undo:
      log-table: undo_log
      log-serialization: jackson
      data-validation: true

feign:
  hystrix:
    enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 # 设置hystrix的超时时间(ms)  这么配置其实就是禁用了ribbon的重试机制
          strategy: THREAD


rocketmq:
  producer:
    groupName: ${spring.application.name}
    namesrvAddr:  127.0.0.1:9876
    maxMessageSize: 4096  # 消息最大长度 默认 1024 * 4 (4M)
    sendMsgTimeOut: 3000  # 发送消息超时时间
    retryTimesWhenSendFailed: 2 # 发送消息失败重试次数，默认2

  consumer:
    groupName: ${spring.application.name}
    namesrvAddr:  127.0.0.1:9876
    topics: TestTopic~TestTag;TestTopic~HelloTag;HelloTopic~HelloTag;MyTopic~*
    consumeThreadMin: 5
    consumeThreadMax: 32
    consumeMessageBatchMaxSize: 1

