server:
  port: 8001
spring:
  application:
    name: gateway
  profiles:
    active: dev
#    上面2个配置 和bootstrap中的配置意味着会去读取 指定命名空间下的 gateway-dev.yaml 配置文件
  cloud:
    gateway:
      routes:
      - id: testService
        uri: lb://testService
        predicates:
        - Path=/testService/**
        filters:
        - RewritePath=/testSerivce/(?<path>.*), /$\{path}
      - id: oauth
        uri: lb://oauth
        predicates:
        - Path=/oauth/**
        filters:
        - RewritePath=/oauth/(?<path>.*), /$\{path}
      - id: user
        uri: lb://user
        predicates:
        - Path=/user/**
        filters:
        - RewritePath=/user/(?<path>.*), /$\{path}

      default-filters:
        - name: RequestRateLimiter
          args:
            # 令牌桶每秒填充平均速率,即行等价于允许用户每秒处理多少个请求平均数
            redis-rate-limiter.replenishRate: 10
            # 令牌桶的容量，允许在一秒钟内完成的最大请求数
            redis-rate-limiter.burstCapacity: 20
            # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
            key-resolver: "#{@apiKeyResolver}"
  redis:
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        min-idle: 0
        max-idle: 5
    host: myRedis
    port: 6379
    database: 1
  main:
    allow-bean-definition-overriding: true

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 6000
  OkToRetryOnAllOperations: false
  MaxAutoRetriesNextServer: 0

#prometheus
management:
  endpoints:
    web:
      exposure:
        include: 'prometheus'
  metrics:
    tags:
      application: ${spring.application.name}